@model IEnumerable<CourseVM>
@{
    ViewData["Title"] = "Courses";
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-info">@TempData["Success"]</div>
}

<div class="container mt-5">
    @Html.AntiForgeryToken()
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">Courses</h2>
        <a class="btn btn-success btn-lg" asp-action="Create" asp-controller="Course">
            <i class="bi bi-plus-circle"></i> Add Course
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-warning text-center py-4">
            <h4 class="alert-heading">No Courses Found!</h4>
            <p class="mb-0">Start by adding a new Course.</p>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover table-bordered shadow-sm rounded">
                <thead class="table-light">
                    <tr class="text-center">
                        <th scope="col">#</th>
                        <th scope="col">Name</th>
                        <th scope="col">Details</th>
                        <th scope="col">Course Category</th>
                        <th scope="col">Course Level</th>
                       @*  <th scope="col">Book Url</th> *@
                       @*  <th scope="col">Created At</th>
                        <th scope="col">Created By</th>
                        <th scope="col">Last Modified At</th>
                        <th scope="col">Last Modified By</th> *@
                        <th scope="col" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var index = 1;
                    }
                    @foreach (var Course in Model)
                    {
                        <tr class="align-middle text-center clickable-row" data-id="@Course.Id">
                            <td>@index</td>
                            <td>@Course.Name</td>
                            <td>@Course.Details</td>
                            <td>@Course.CategoryName</td>
                            <td>@Course.LevelName</td>
                           @*  <td>
                                <a href="@Course.Book" target="_blank">View Book</a>
                            </td> *@
           


                           @*  <td>@Course.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>@Course.CreatedBy</td>
                            <td>@Course.LastModifiedAt?.ToString("yyyy-MM-dd HH:mm")</td>
                            <td>@Course.LastModifiedBy</td> *@
                            <td>
                                <div class="d-flex justify-content-center">
                                    <a class="btn btn-warning btn-sm me-2" asp-controller="Course" asp-action="Update" asp-route-id="@Course.Id" title="Edit">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>

                                    <button class="btn btn-danger btn-sm me-2 delete-btn" data-name="@Course.Name" data-id="@Course.Id" title="Delete"><i class="bi bi-trash"></i></button>


                                    <a class="btn btn-primary btn-sm me-2" asp-controller="CourseConfig" asp-action="CourseConfigByCourseId" asp-route-Courseid="@Course.Id" title="Config">
                                    Course Configurations <i class="bi bi-gear-fill"></i>
                                    </a>

                                    <a class="btn btn-primary btn-sm me-2" asp-controller="CourseQuestionConfig" asp-action="CourseQuestionConfigByCourseId" asp-route-Courseid="@Course.Id" title="Configs">
                                      Questions Configurations <i class="bi bi-gear-fill"></i>
                                    </a>


                                    @* <a class="btn btn-info btn-sm me-2" asp-controller="Course" asp-action="getById" asp-route-id="@Course.Id" title="View">
                                        <i class="bi bi-eye"></i>
                                    </a> *@
                                   
                                </div>
                            </td>
                        </tr>
                        index++;
                    }
                </tbody>
            </table>
        </div>
    }
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const rows = document.querySelectorAll('.clickable-row');
        rows.forEach(row => {
            row.addEventListener('click', function () {
                const id = this.getAttribute('data-id');
                window.location.href = `@Url.Action("getById", "Course")/${id}`;
            });
        });
    });
</script>


<style>
    .clickable-row {
        cursor: pointer;
    }

</style>

<!-- Include the Delete Modal -->
@await Html.PartialAsync("_DeleteModal")

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        const deleteModal = new bootstrap.Modal(document.getElementById("deleteModal"));
        let deleteUrl = "";
        let rowToDelete = null;

        $(".delete-btn").click(function () {
            event.stopPropagation(); // Prevent row click from interfering

            let CourseId = $(this).data("id");
            let CourseName = $(this).data("name");
            console.log("Clicked button's CourseId:", CourseId);
            $("#modalItemName").text(CourseName);
            deleteUrl = "/Course/Delete/" + CourseId;
            rowToDelete = $(this).closest("tr");

            console.log("Row to delete:", rowToDelete);
            console.log("Row HTML:", rowToDelete.html()); // Check if it exists

            deleteModal.show();
        });

        $("#confirmDelete").click(function () {
            let token = $('input[name="__RequestVerificationToken"]').val(); // Get the token

            if (!deleteUrl) return;

            $.ajax({
                url: deleteUrl,
                type: "POST",
                headers: { "RequestVerificationToken": token },
                success: function (result) {
                    if (result.success) {
                        deleteModal.hide();
                        rowToDelete.remove(); // Remove row from table
                        location.reload();
                    }
                    else {
                        deleteModal.hide();
                        location.reload();
                        // alert("Error: Course could not be deleted.");
                    }
                },
                error: function (error) {
                    console.log("Error Thrown:", error);
                }
            });
        });
    });
</script>