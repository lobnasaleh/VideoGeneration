@model CourseConfig

@{
    ViewData["Title"] = "Course Configurations";
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-info">@TempData["Success"]</div>
}
<div class="container mt-5">
    @Html.AntiForgeryToken()
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">Course Configurations</h2>
        <a class="btn btn-success btn-lg" asp-action="Create">
            <i class="bi bi-plus-circle"></i> Add Course Configurations
        </a>
    </div>

    @if (Model is null)
    {
        <div class="alert alert-warning text-center py-4">
            <h4 class="alert-heading">No Course Configurations Found!</h4>
            <p class="mb-0">Start by adding a new Course Configurations .</p>
        </div>
    }
    else
    {

                <div class="table-responsive">
                    <table class="table table-hover table-bordered shadow-sm rounded">
                        <thead>
                            <tr>
                                <th scope="col">ChaptersCount</th>
                                <th scope="col">LessonsCountPerChapter</th>
                                <th scope="col">VideoDurationInMin</th>
                                <th scope="col">Language</th>
                                <th scope="col">Persona</th>
                                <th scope="col">Course Name</th>
                                <th scope="col" class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                           
                                <tr class="align-middle text-center clickable-row" data-id="@Model.ID">
                                <td>@Model.ChaptersCount</td>
                                <td>@Model.LessonsCountPerChapter</td>
                                <td>@Model.VideoDurationInMin</td>
                                <td>@Model.Language</td>
                                <td>@Model.Persona</td>
                                <td>@Model.Course?.Name</td>
                                    <td>
                                        <div class="d-flex justify-content-center">
                                        <a class="btn btn-warning btn-sm me-2" asp-action="Edit" asp-route-id="@Model.ID" title="Edit">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>

                                        <button class="btn btn-danger btn-sm me-2 delete-btn" @* data-name="@courseConfig." *@ data-id="@Model.ID" title="Delete"><i class="bi bi-trash"></i></button>
                                        <a asp-action="Index" asp-controller="Course" class="btn btn-outline-primary">Back</a>


                                        </div>
                                    </td>
                                </tr>
                            

                        </tbody>
                    </table>
                </div>
           

    }
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const rows = document.querySelectorAll('.clickable-row');
        rows.forEach(row => {
            row.addEventListener('click', function () {
                const id = this.getAttribute('data-id');
                window.location.href = `@Url.Action("Details", "CourseConfig")/${id}`;
            });
        });
    });
</script>

<style>
    .clickable-row {
        cursor: pointer;
    }

</style>


<!-- Include the Delete Modal -->
@await Html.PartialAsync("_DeleteModal")

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        const deleteModal = new bootstrap.Modal(document.getElementById("deleteModal"));
        let deleteUrl = "";
        let rowToDelete = null;

        $(".delete-btn").click(function () {
            event.stopPropagation(); // Prevent row click from interfering

            let CourseConfigId = $(this).data("id");
            let CourseConfigName = $(this).data("name");
            console.log("Clicked button's CourseConfigId:", CourseConfigId);
            $("#modalItemName").text(CourseConfigName);
            deleteUrl = "/CourseConfig/Delete/" + CourseConfigId;
            rowToDelete = $(this).closest("tr");

            console.log("Row to delete:", rowToDelete);
            console.log("Row HTML:", rowToDelete.html()); // Check if it exists

            deleteModal.show();
        });

        $("#confirmDelete").click(function () {
            let token = $('input[name="__RequestVerificationToken"]').val(); // Get the token

            if (!deleteUrl) return;

            $.ajax({
                url: deleteUrl,
                type: "POST",
                headers: { "RequestVerificationToken": token },
                success: function (result) {
                    if (result.success) {
                        deleteModal.hide();
                        rowToDelete.remove(); // Remove row from table
                        location.reload();
                    }
                    else {
                        deleteModal.hide();
                        location.reload();
                        // alert("Error: CourseConfig could not be deleted.");
                    }
                },
                error: function (error) {
                    console.log("Error Thrown:", error);
                }
            });
        });
    });
</script>